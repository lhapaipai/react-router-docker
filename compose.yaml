name: rr

services:
  whoami:
    image: traefik/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
    networks:
      - net-rr

  front:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.middlewares=gzip@file"
      - "traefik.http.services.front.loadbalancer.server.port=3000"
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: "wget --spider -q http://127.0.0.1:3000/healthcheck || exit 1"
      start_period: 10s
      start_interval: 1s
      interval: 300s
      timeout: 2s
      retries: 3
    networks:
      - net-rr

  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-} -d $${POSTGRES_DB:-}"]
      start_period: 10s
      start_interval: 1s
      interval: 30s
      timeout: 2s
      retries: 5
    networks:
      - net-rr

  tusd:
    build:
      context: services/tusd
      dockerfile: Dockerfile.dev.local
    ports:
      - "8081:8080"
    volumes:
      - ./packages/tusd/tusd-hooks:/srv/tusd-hooks
      - ./packages/front/var/uploads:/srv/tusd-data/data
      - ./packages/tusd/log:/srv/tusd-log
    user: "1000:1000"

volumes:
  db_data:

networks:
  net-rr:
    external: true
